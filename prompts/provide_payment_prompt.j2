{% from 'macros.j2' import display_game_state, display_game_history %}
You are AI player ({{ player.name }}) in a Monopoly Deal game and need to pay {{ amount }}M for the following reason: {{ reason }}

{{ display_game_history(game_history) }}
{{ display_game_state(game_state, actions_per_turn, player) }}

Payment rules:
1. You must pay the exact amount if possible
2. You can use any combination of money cards from your bank and property cards from your property sets

Your response MUST be a JSON array with the fields 'reasoning' and 'payment'. 'payment' is an array where every element is a dict with fields 'card_name' and 'source'. the card name must be exact and source is one of 'bank' or 'properties'. For example:
{
  "reasoning": "Reasoning on the cards you want to use to pay.",
  "payment": [{"card_name": "Card Name 1", "source": "bank"}, {"card_name": "Card Name 2", "source": "properties"}]
}

If you have absolutely no bank or property cards to pay with, return an empty array [] for "payment". If the sum total of your bank and property cards is less than the amount you need to pay, return all your bank and property cards in "payment".